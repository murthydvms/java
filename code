package MyPackage;

import java.io.File;
import java.lang.reflect.Array;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Scanner;

public class EligRuleNew
{
    public static void main(String[] args) throws Exception
    {
        ArrayList<String> s0 = new ArrayList<>();
        String[] s1 = new String[1];
        ArrayList<ArrayList<String>> s2 = new ArrayList<>();
        Scanner sc = new Scanner(new File("/Users/murthy/Downloads/testing.csv"));
        int j = 0;

        while(sc.hasNext()){
            s1=sc.next().split(",");
            s2.add(new ArrayList<String>());
            for(int i=0;i<s1.length;i++) {
                s2.get(j).add(s1[i]);
            }
            j++;
        }
        sc.close();

        //total number of records
        int p=0,start_id=0,end_id=0,fcnt=0,q=0,start_opn=0,end_cls=0,paren_opn=0,paren_cls=0;
        // String str = " ",rule_nm = " ",cmpr_opr=" ";
        int eligid = 0;
        while(p < j-1){

            int grp = 0,cnt=1;boolean opn = false;
            String str = " ",rule_nm = " ",cmpr_opr=" ";
            eligid = Integer.parseInt(s2.get(p).get(0));
            System.out.println(eligid);
            while(grp == 0 && q<j)
            {
                if(eligid == Integer.parseInt(s2.get(q).get(0))){cnt++;q++;}
                if(eligid != Integer.parseInt(s2.get(q).get(0))){grp++;cnt--;}
            }
            fcnt += cnt;
            //p=fcnt+1;
            System.out.println("First group count: " + cnt);

            //set start and end for an eligid
            //start_id=p;
            start_id = p;
            end_id=fcnt;
            grp=0;
            while(start_id < end_id)
            {
                //check for open and close
                grp=0;start_opn=0;end_cls=0;opn=false;
                while(grp==0){
                    //  if (s2.get(start_id).get(6) == "O")
                    if ((s2.get(start_id).get(6)).equals("O"))
                    {
                        opn = true;
                        start_opn = start_id;
                        paren_opn=Integer.parseInt(s2.get(start_id).get(7));
                    }
                    //  if (s2.get(start_id).get(6) == "SPACE")
                    if (!(s2.get(start_id).get(6)).equals("C"))
                    {
                        if(opn)
                        {
                            start_id++;
                        }
                        else {
                            if ((s2.get(start_id).get(3)).equals("EQ")) {cmpr_opr = "=";}
                            if ((s2.get(start_id).get(3)).equals("NE")) {cmpr_opr = "!=";}
                            if ((s2.get(start_id).get(3)).equals("SPACE")) {cmpr_opr = "!=";}

                            if ((s2.get(start_id).get(8)).equals("SPACE"))
                            {
                                str= str + "(" + s2.get(start_id).get(2) + " " + cmpr_opr;
                            }
                            else
                            {
                                if ((s2.get(start_id).get(8)).equals("OR")) {str = str + "||";}
                                if ((s2.get(start_id).get(8)).equals("AND")) {str = str + "&&";}

                                str= str + "(" + s2.get(start_id).get(2) + " " + cmpr_opr;

                      //          if ((s2.get(start_id).get(9)).equals("SPACE")){str=str+  " " + s2.get(start_id).get(4) + ")";}
                      //          if ((s2.get(start_id).get(9)).equals("EXCL")){str=str+  " Y)";}

                            }
                            if ((s2.get(start_id).get(9)).equals("SPACE")){str=str+  " " + s2.get(start_id).get(4) + ")";}
                            if ((s2.get(start_id).get(9)).equals("EXCL")){str=str+  " Y)";}
                            start_opn=1+start_id;grp=1;end_cls =start_id;start_id++;
                        }

                    }
                    // if (s2.get(start_id).get(6) == "C")
                    if ((s2.get(start_id).get(6)).equals("C"))
                    {
                        end_cls = start_id;
                        paren_cls=Integer.parseInt(s2.get(start_id).get(7));
                        grp=1;
                    }
                }

                int in_open =0;

                for(int l = start_opn; l <= end_cls;l++)
                {
                    rule_nm = s2.get(l).get(2);
                    if ((s2.get(l).get(3)).equals("EQ")) {cmpr_opr = "=";}
                    if ((s2.get(l).get(3)).equals("NE")) {cmpr_opr = "!=";}

                    if ((in_open == 1) && ((s2.get(l+1).get(2)).equals(rule_nm)) &&
                            (s2.get(l).get(3)).equals(s2.get(l+1).get(3)) && (cmpr_opr == "="))
                    { str = str + "," + s2.get(l).get(4);}

                    if (in_open == 1 && (s2.get(l+1).get(2)).equals(rule_nm)  &&
                            (s2.get(l).get(3)).equals(s2.get(l+1).get(3)) && cmpr_opr == "!=")
                    { str = str + "," + s2.get(l).get(4);}

                    if (in_open == 0)
                    {
                        if ((s2.get(l).get(8)).equals("OR"))
                        {
                            str = str + "||";
                            if ((s2.get(l).get(6)).equals("O"))
                            {
                                for(int x=0;x<paren_opn;x++){str = str + "(";}
                            }
                        }
                        if ((s2.get(l).get(8)).equals("AND"))
                        {
                            str = str + "&&";
                            if ((s2.get(l).get(6)).equals("O"))
                            {
                                for(int x=0;x<paren_opn;x++){str = str + "(";}
                            }
                        }
                        if ((s2.get(l).get(8)).equals("SPACE"))
                        {
                            //str = str + "||";
                            if ((s2.get(l).get(6)).equals("O"))
                            {
                                for(int x=0;x<paren_opn;x++){str = str + "(";}
                            }
                        }
                    }

                    if (in_open == 0 && (s2.get(l+1).get(2)).equals(rule_nm)  &&
                            (s2.get(l).get(3)).equals(s2.get(l+1).get(3)) && cmpr_opr == "=")
                    {
                        str = str + rule_nm + " IN(" + s2.get(l).get(4);
                        in_open = 1;
                    }

                    if (in_open == 0 && (s2.get(l+1).get(2)).equals(rule_nm)  &&
                            (s2.get(l).get(3)).equals(s2.get(l+1).get(3)) && cmpr_opr == "!=")
                    {
                        str = str + rule_nm + " NOT IN(" + s2.get(l).get(4);
                        in_open = 1;
                    }

                    if (in_open == 0 && (!((s2.get(l+1).get(2)).equals(rule_nm))  ||
                            (s2.get(l).get(3)).equals(s2.get(l+1).get(3)))  && cmpr_opr == "=")
                    {
                        str = str + rule_nm + "=" + s2.get(l).get(4);
                    }

                    if (in_open == 0 && (!((s2.get(l+1).get(2)).equals(rule_nm)) ||
                            (s2.get(l).get(3)).equals(s2.get(l+1).get(3))) && cmpr_opr == "!=")
                    {
                        str = str + rule_nm + "!=" + s2.get(l).get(4);
                    }

                    if (in_open == 1 && (!((s2.get(l+1).get(2)).equals(rule_nm)) ||
                            !(s2.get(l).get(3)).equals(s2.get(l+1).get(3)) || !(s2.get(l).get(0)).equals(s2.get(l+1).get(0))))
                    {
                        str = str + "," + s2.get(l).get(4) + ")";
                        in_open = 0;
                    }

                    if (l>l)
                    {
                        if((s2.get(l+1).get(6)).equals("O"))
                        {
                            for(int m=1;m < Integer.parseInt(s2.get(l+1).get(7));m++)
                            {
                                str = str + "(";
                            }
                        }
                    }
                    if (l == end_cls)
                    {
                        for(int n=1;n <= paren_cls;n++)
                        {
                            str = str + ")";
                        }
                    }

                    // System.out.println(str);
                }

                start_id = end_cls + 1;
            }

            System.out.println("**** OUTPUT *****" + str);
            p = start_id;
        }


    }


}
